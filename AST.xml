<ProgramNode>
<VariableDeclaration>
<Type>INT</Type>
<IdInitialization>
<IdentifierExpression>
<xleft> 62</xleft>
<value> n</value>
<xright> 63</xright>
</IdentifierExpression>
<IntegerConstant> 0</IntegerConstant>
</IdInitialization>
</VariableDeclaration>
<ProcedureNode>
<IdentifierExpression>
<xleft> 80</xleft>
<value> factorial</value>
<xright> 89</xright>
</IdentifierExpression>
<ParameterDeclarations>
<Type>INT</Type>
<IdentifierExpression>
<xleft> 94</xleft>
<value> n</value>
<xright> 95</xright>
</IdentifierExpression>
</ParameterDeclarations>
<ResultTypes>
<Type>INT</Type>
</ResultTypes>
<ProcedureBody>
<VariableDeclaration>
<Type>INT</Type>
<IdInitialization>
<IdentifierExpression>
<xleft> 109</xleft>
<value> result</value>
<xright> 115</xright>
</IdentifierExpression>
<IntegerConstant> 0</IntegerConstant>
</IdInitialization>
</VariableDeclaration>
<IfStatement>
<BinaryExpression>
<IdentifierExpression>
<xleft> 130</xleft>
<value> n</value>
<xright> 131</xright>
</IdentifierExpression>
<Operation> EQ</Operation>
<IntegerConstant> 0</IntegerConstant>
</BinaryExpression>
<AssignStatement>
<IdentifierExpression>
<xleft> 140</xleft>
<value> result</value>
<xright> 146</xright>
</IdentifierExpression>
<IntegerConstant> 1</IntegerConstant>
</AssignStatement>
<AssignStatement>
<IdentifierExpression>
<xleft> 163</xleft>
<value> result</value>
<xright> 169</xright>
</IdentifierExpression>
<BinaryExpression>
<IdentifierExpression>
<xleft> 173</xleft>
<value> n</value>
<xright> 174</xright>
</IdentifierExpression>
<Operation> TIMES</Operation>
<CallProcedureExpression>
<IdentifierExpression>
<xleft> 177</xleft>
<value> factorial</value>
<xright> 186</xright>
</IdentifierExpression>
<BinaryExpression>
<IdentifierExpression>
<xleft> 187</xleft>
<value> n</value>
<xright> 188</xright>
</IdentifierExpression>
<Operation> MINUS</Operation>
<IntegerConstant> 1</IntegerConstant>
</BinaryExpression>
</CallProcedureExpression>
</BinaryExpression>
</AssignStatement>
</IfStatement>
<CallProcedureExpression>
<IdentifierExpression>
<xleft> 210</xleft>
<value> factorial</value>
<xright> 219</xright>
</IdentifierExpression>
<IdentifierExpression>
<xleft> 220</xleft>
<value> n</value>
<xright> 221</xright>
</IdentifierExpression>
</CallProcedureExpression>
<IdentifierExpression>
<xleft> 223</xleft>
<value> n</value>
<xright> 224</xright>
</IdentifierExpression>
</ProcedureBody>
</ProcedureNode>
<ProcedureNode>
<IdentifierExpression>
<xleft> 0</xleft>
<value> main</value>
<xright> 0</xright>
</IdentifierExpression>
<ResultTypes>
<Type>INT</Type>
</ResultTypes>
<ProcedureBody>
<VariableDeclaration>
<Type>INT</Type>
<IdInitialization>
<IdentifierExpression>
<xleft> 256</xleft>
<value> n</value>
<xright> 257</xright>
</IdentifierExpression>
<IntegerConstant> 0</IntegerConstant>
</IdInitialization>
</VariableDeclaration>
<WhileStatement>
<WriteStatement><StringConstant> Enter n, or >= 10 to exit: </StringConstant>
</WriteStatement>
<ReadStatement>
<IdentifierExpression>
<xleft> 322</xleft>
<value> n</value>
<xright> 323</xright>
</IdentifierExpression>
</ReadStatement>
<BinaryExpression>
<IdentifierExpression>
<xleft> 334</xleft>
<value> n</value>
<xright> 335</xright>
</IdentifierExpression>
<Operation> LT</Operation>
<IntegerConstant> 10</IntegerConstant>
</BinaryExpression>
<WriteStatement><StringConstant> Factorial of </StringConstant>
<IdentifierExpression>
<xleft> 372</xleft>
<value> n</value>
<xright> 373</xright>
</IdentifierExpression>
<StringConstant>  is </StringConstant>
<CallProcedureExpression>
<IdentifierExpression>
<xleft> 383</xleft>
<value> factorial</value>
<xright> 392</xright>
</IdentifierExpression>
<IdentifierExpression>
<xleft> 393</xleft>
<value> n</value>
<xright> 394</xright>
</IdentifierExpression>
</CallProcedureExpression>
<StringConstant> \n</StringConstant>
</WriteStatement>
</WhileStatement>
<IntegerConstant> 0</IntegerConstant>
</ProcedureBody>
</ProcedureNode>
</ProgramNode>
