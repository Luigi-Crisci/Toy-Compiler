<ProgramNode>
<ProcedureNode>
<IdentifierExpression>
<value> printPeg</value>
</IdentifierExpression>
<ParameterDeclarations>
<Type>INT</Type>
<IdentifierExpression>
<value> peg</value>
</IdentifierExpression>
</ParameterDeclarations>
<ResultTypes>
<Type>VOID</Type>
</ResultTypes>
<ProcedureBody>
<IfStatement>
<BinaryExpression>
<BinaryExpression>
<IdentifierExpression>
<value> peg</value>
</IdentifierExpression>
<Operation> EQ</Operation>
<IntegerConstant> 1</IntegerConstant>
</BinaryExpression>
<Operation> AND</Operation>
<IntegerConstant> 1</IntegerConstant>
</BinaryExpression>
<WriteStatement><StringConstant> left</StringConstant>
</WriteStatement>
<ElifStatement>
<BinaryExpression>
<IdentifierExpression>
<value> peg</value>
</IdentifierExpression>
<Operation> EQ</Operation>
<IntegerConstant> 2</IntegerConstant>
</BinaryExpression>
<WriteStatement><StringConstant> center</StringConstant>
</WriteStatement>
</ElifStatement>
<WriteStatement><StringConstant> right</StringConstant>
</WriteStatement>
</IfStatement>
</ProcedureBody>
</ProcedureNode>
<ProcedureNode>
<IdentifierExpression>
<value> hanoi</value>
</IdentifierExpression>
<ParameterDeclarations>
<Type>INT</Type>
<IdentifierExpression>
<value> n</value>
</IdentifierExpression>
<IdentifierExpression>
<value> fromPeg</value>
</IdentifierExpression>
<IdentifierExpression>
<value> usingPeg</value>
</IdentifierExpression>
<IdentifierExpression>
<value> toPeg</value>
</IdentifierExpression>
</ParameterDeclarations>
<ResultTypes>
<Type>VOID</Type>
</ResultTypes>
<ProcedureBody>
<IfStatement>
<BinaryExpression>
<IdentifierExpression>
<value> n</value>
</IdentifierExpression>
<Operation> NE</Operation>
<IntegerConstant> 0</IntegerConstant>
</BinaryExpression>
<CallProcedureStatement>
<BinaryExpression>
<IdentifierExpression>
<value> n</value>
</IdentifierExpression>
<Operation> MINUS</Operation>
<IntegerConstant> 1</IntegerConstant>
</BinaryExpression>
<IdentifierExpression>
<value> fromPeg</value>
</IdentifierExpression>
<IdentifierExpression>
<value> toPeg</value>
</IdentifierExpression>
<IdentifierExpression>
<value> usingPeg</value>
</IdentifierExpression>
</CallProcedureStatement>
<WriteStatement><StringConstant> Move disk from </StringConstant>
</WriteStatement>
<CallProcedureStatement>
<IdentifierExpression>
<value> fromPeg</value>
</IdentifierExpression>
</CallProcedureStatement>
<WriteStatement><StringConstant>  peg to </StringConstant>
</WriteStatement>
<CallProcedureStatement>
<IdentifierExpression>
<value> toPeg</value>
</IdentifierExpression>
</CallProcedureStatement>
<WriteStatement><StringConstant>  peg.\n</StringConstant>
</WriteStatement>
<CallProcedureStatement>
<BinaryExpression>
<IdentifierExpression>
<value> n</value>
</IdentifierExpression>
<Operation> MINUS</Operation>
<IntegerConstant> 1</IntegerConstant>
</BinaryExpression>
<IdentifierExpression>
<value> usingPeg</value>
</IdentifierExpression>
<IdentifierExpression>
<value> fromPeg</value>
</IdentifierExpression>
<IdentifierExpression>
<value> toPeg</value>
</IdentifierExpression>
</CallProcedureStatement>
</IfStatement>
</ProcedureBody>
</ProcedureNode>
<ProcedureNode>
<IdentifierExpression>
<value> main</value>
</IdentifierExpression>
<ResultTypes>
<Type>INT</Type>
</ResultTypes>
<ProcedureBody>
<VariableDeclaration>
<Type>INT</Type>
<IdInitialization>
<IdentifierExpression>
<value> n</value>
</IdentifierExpression>
<IntegerConstant> 0</IntegerConstant>
</IdInitialization>
</VariableDeclaration>
<WriteStatement><StringConstant> How many pegs? </StringConstant>
</WriteStatement>
<ReadStatement>
<IdentifierExpression>
<value> n</value>
</IdentifierExpression>
</ReadStatement>
<CallProcedureStatement>
<IdentifierExpression>
<value> n</value>
</IdentifierExpression>
<IntegerConstant> 1</IntegerConstant>
<IntegerConstant> 2</IntegerConstant>
<IntegerConstant> 3</IntegerConstant>
</CallProcedureStatement>
<IntegerConstant> 0</IntegerConstant>
</ProcedureBody>
</ProcedureNode>
</ProgramNode>
